{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","handleSelectedTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","onFilter","onTitleFilter","onClearFilter","useState","query","setQuery","all","filter","setFilter","value","onChange","event","target","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleModalClose","isLoaded","setIsLoaded","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","setSelectedTodo","titleFilter","setTitleFilter","visibleTodos","toLowerCase","includes","findTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cac1ef5.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props>\n  = ({ todos, handleSelectedTodo, selectedTodo }) => {\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': todo === selectedTodo,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n","import { useState } from 'react';\nimport { Status } from '../../types/Status';\n\ntype TodoFilterProps = {\n  onFilter: (status: string) => void,\n  onTitleFilter: (title: string) => void,\n  onClearFilter: () => void,\n};\n\nexport const TodoFilter\n= ({ onFilter, onTitleFilter, onClearFilter } : TodoFilterProps) => {\n  const [query, setQuery] = useState<string>('');\n  const [filter, setFilter] = useState(Status.all);\n  const handleSelect: React.ChangeEventHandler<HTMLSelectElement>\n    = (event) => {\n      setFilter(event.target.value as Status);\n      onFilter(event.target.value as Status);\n    };\n\n  const handleSearchInput: React.ChangeEventHandler<HTMLInputElement>\n    = (event) => {\n      setQuery(event.target.value);\n      onTitleFilter(event.target.value);\n    };\n\n  const handleClearButton = () => {\n    setFilter(Status.all);\n    setQuery('');\n    onClearFilter();\n  };\n\n  return (\n\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleSelect}\n          >\n            <option value={Status.all}>All</option>\n            <option value={Status.active}>Active</option>\n            <option value={Status.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearchInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearButton}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype TodoModalProps = {\n  todo: Todo,\n  handleModalClose: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps>\n  = ({ todo, handleModalClose }) => {\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      getUser(todo.userId).then(setUser).finally(() => setIsLoaded(true));\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!isLoaded ? (\n          <Loader />)\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleModalClose}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {todo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  };\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [titleFilter, setTitleFilter] = useState('');\n  const [filter, setFilter] = useState(Status.all);\n\n  const handleSelectedTodo = (todo: Todo) => {\n    const findTodo = todos.find(value => value === todo) as Todo;\n\n    setSelectedTodo(findTodo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleFilter = () => {\n    switch (filter) {\n      case Status.active:\n        return setFilter(Status.active);\n\n      case Status.completed:\n        return setFilter(Status.completed);\n\n      default:\n        return Status.all;\n    }\n  };\n\n  const handleTitleFilter = (title: string) => {\n    setTitleFilter(title.toLowerCase());\n  };\n\n  const visibleTodos = todos.filter(todo => {\n    if (Status.all) {\n      return todo.title.toLowerCase().includes(titleFilter);\n    }\n\n    if (Status.completed) {\n      return todo.completed && todo.title.toLowerCase().includes(titleFilter);\n    }\n\n    if (Status.active) {\n      return !todo.completed && todo.title.toLowerCase().includes(titleFilter);\n    }\n\n    return todo.title.toLowerCase().includes(titleFilter);\n  });\n\n  const handleClearFilter = () => {\n    setTitleFilter('');\n    setFilter(Status.all);\n  };\n\n  useEffect(() => {\n    getTodos().then(setTodos).finally(() => setIsLoaded(true));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={handleFilter}\n                onTitleFilter={handleTitleFilter}\n                onClearFilter={handleClearFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                handleSelectedTodo={handleSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && <TodoModal todo={selectedTodo} handleModalClose={handleModalClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}